openapi: 3.0.3
info:
  title: Internal API for Astrophysics Data System (ADS)
  description: >
    Internal API endpoints
  termsOfService: https://ui.adsabs.harvard.edu/help/terms/
  contact:
    name: ADS Help
    url: https://github.com/adsabs/adsabs-dev-api
    email: adshelp@cfa.harvard.edu
  version: 1.0.0
servers:
  - url: https://api.adsabs.harvard.edu/{basePath}
    description: Production Server
    variables:
      basePath:
        default: v1
        enum:
          - v1
  - url: https://devapi.adsabs.harvard.edu/{basePath}
    description: Development Server
    variables:
      basePath:
        default: v1
        enum:
          - v1
tags:
  - name: adsws
  - name: libraries
  - name: graphics
  - name: classic import
  - name: objects
  - name: orcid
  - name: reference
  - name: resolver
  - name: notifications
  - name: vault
components:
  securitySchemes:
    ApiKeySecurity:
      type: http
      scheme: bearer
      bearerFormat: JWT
    XCsrfSecurity:
      type: apiKey
      in: header
      name: x-csrftoken
  parameters:
    token:
      $ref: parameters.yaml#/token
    user_id:
      $ref: parameters.yaml#/user_id
    orcidId:
      $ref: parameters.yaml#/orcidId
    putcode:
      $ref: parameters.yaml#/putcode
    OrcidAuthorization:
      $ref: parameters.yaml#/OrcidAuthorization
    iso_datestring:
      $ref: parameters.yaml#/iso_datestring
  responses:
    TokenResponse:
      $ref: responses.yaml#/TokenResponse
  schemas:
    orcid-work-to:
      $ref: schemas.yaml#/orcid-work-to
    orcid-work-from:
      $ref: schemas.yaml#/orcid-work-from
    orcid-preferences:
      $ref: schemas.yaml#/orcid-preferences
    myADSsetupResponse:
      $ref: schemas.yaml#/myADSsetupResponse
security:
  - ApiKeySecurity: []
  - XCsrfSecurity: []
paths:
  /alive:
    get:
      summary: Health check
      description: >
        Signal that the application is healthy. Note that this endpoint
        can be run on the main web application or on an individual
        microservice (e.g. /v1/biblib/alive)
      security:
      - ApiKeySecurity: []
      tags:
        - internal
      responses:
        '200':
          description: True if application is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  alive:
                    type: boolean
  /ready:
    get:
      summary: Readiness check
      description: >
        Signal that the application is ready. Note that this endpoint
        can be run on the main web application or on an individual
        microservice (e.g. /v1/biblib/ready)
      security:
      - ApiKeySecurity: []
      tags:
        - internal
      responses:
        '200':
          description: True if application is ready
          content:
            application/json:
              schema:
                type: object
                properties:
                  ready:
                    type: boolean
        '503':
          description: Application not ready
  /accounts/bootstrap:
    get:
      summary: Create/return OAuthClient
      description: >
        If the user is not signed in, an anonymous user is created/returned.
        If the user is authenticated as a real user, a Bumblebee client
        OAuthClient and token is created/returned.
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: Client info
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  scopes:
                    type: array
                    items:
                      type: string
                  client_id:
                    type: string
                  access_token:
                    type: string
                  client_name:
                    type: string
                  token_type:
                    type: string
                  ratelimit:
                    type: integer
                  anonymous:
                    type: boolean
                  client_secret:
                    type: string
                  expire_in:
                    type: string
                  refresh_token:
                    type: string
        '400':
          description: Bad request
  /accounts/protected:
    get:
      summary: OAuth check resource
      description: Resource for checking that oauth requirement is satisfied
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Oauth info
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: string
                  oauth:
                    type: string
  /accounts/csrf:
    get:
      summary: Return a CSRF token
      description: Returns a CSRF token
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: CSRF token
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf:
                    type: string
  /accounts/user:
    post:
      summary: Login the user
      description: >
        Authenticate and login the user
      tags:
        - adsws
        - internal
      security:
        - XCsrfSecurity: []
      requestBody:
        description: >
          JSON containing the user login information.
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Account has not been verified
  /accounts/user/delete:
    post:
      summary: Delete current user's account
      description: Delete the current user's account
      tags:
        - adsws
        - internal
      security:
        - XCsrfSecurity: []
      requestBody:
        description: >
          Empty; uses POST instead of GET to enable CSRF validation
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /accounts/register:
    post:
      summary: Register a new user account
      description: Register a new user account
      tags:
        - adsws
        - internal
      security:
        - XCsrfSecurity: []
      requestBody:
        description: >
          JSON containing the user registration information.
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password1:
                  type: string
                password2:
                  type: string
                verify_url:
                  type: string
                g-recaptcha-response:
                  type: string
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Malformed request; or passwords do not match
        '403':
          description: Captcha was not verified
        '409':
          description: Email already registered for an account
  /accounts/logout:
    post:
      summary: Logout of the current user's account
      description: Logout of the current user's account
      tags:
        - adsws
        - internal
      security:
        - XCsrfSecurity: []
      requestBody:
        description: >
          Empty; uses POST instead of GET to enable CSRF validation
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /accounts/token:
    get:
      summary: Get API token
      description: Fetch the API token for the current user
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '500':
          description: No API token found
    put:
      summary: Create an API token
      description: Create API token for the current user
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '503':
          description: Database error
  /accounts/info/{account_data}:
    get:
      summary: Gets user info
      description: >
        Get user info from session ID, user ID, access token, or
        client ID.
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - name: account_data
          description: >
            User identifier; can be session ID, user ID, access token,
            or client ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                type: object
                properties:
                  hashed_user_id:
                    type: string
                  hashed_client_id:
                    type: string
                  anonymous:
                    type: boolean
                  source:
                    type: string
        '404':
          description: Identifier not found
        '500':
          description: Missing authentication
  /accounts/change-password:
    post:
      summary: Change current user's password
      description: Change current user's password
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
        - XCsrfSecurity: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password1:
                  type: string
                new_password2:
                  type: string
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Malformed request, or passwords do not match
        '401':
          description: Must validate old password
  /accounts/change-email:
    post:
      summary: Change current user's email
      description: Change current user's email
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
        - XCsrfSecurity: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                verify_url:
                  type: string
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Malformed request
        '401':
          description: Must validate old password
        '403':
          description: Email has already been registered
  /accounts/verify/{token}:
    get:
      summary: Verify user's email
      description: Verify user's email
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  message:
                    type: string
        '400':
          description: Email has already been verified
        '404':
          description: Unknown verification token
  /accounts/reset-password/{token}:
    get:
      summary: Verify user's email before resetting password
      description: Verify user's email before resetting password
      tags:
        - adsws
        - internal
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: Email if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
        '400':
          description: User does not exist
        '404':
          description: Unknown verification token
    post:
      summary: Send password reset request
      description: >
        Send the password reset request email to the specified email
        address. Note that "token" represents the raw email address
        of the recipient and is not expected to be encoded.
      tags:
        - adsws
        - internal
      security:
        - ApiKeySecurity: []
        - XCsrfSecurity: []
      parameters:
        - name: token
          description: Raw email address of recipient
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                g-recaptcha-response:
                  type: string
                reset_url:
                  type: string
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Malformed request
        '403':
          description: Captcha not verified; email never verified
        '404':
          description: User does not exist
    put:
      summary: Reset password
      description: Reset password
      tags:
        - adsws
        - internal
      security:
        - XCsrfSecurity: []
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password1:
                  type: string
                password2:
                  type: string
      responses:
        '200':
          description: Message if successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: >
            Malformed request; passwords do not match; validation error
        '404':
          description: Unknown verification token
        '500':
          description: User does not exist
  /accounts/status:
    get:
      summary: Health check resource
      description: Health check resource
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: Return if health check passes
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: string
                  status:
                    type: string
                    default: 'online'
  /status:
    get:
      summary: Health check resource
      description: Health check resource
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: Return if health check passes
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: string
                  status:
                    type: string
                    default: 'online'
  /protected:
    get:
      summary: OAuth check resource
      description: Resource for checking that oauth requirement is satisfied
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Oauth info
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: string
                  oauth:
                    type: string
  /user/{identifier}:
    get:
      summary: Get user info
      description: Supply a user ID or email, get the other one back
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      parameters:
        - name: identifier
          description: User ID or user email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
        '404':
          description: User not found
  /userfeedback:
    post:
      summary: Submit user feedback
      description: Submit user feedback
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                _subject:
                  description: Type of feedback
                  type: string
                name:
                  description: User's name
                  type: string
                _replyto:
                  description: User email address to reply to
                  type: string
                comments:
                  description: Feedback field
                  type: string
                g-recaptcha-response:
                  type: string
                origin:
                  type: string
                currentuser:
                  description: Email of current logged-in user
                  type: string
                browser.name:
                  type: string
                browser.version:
                  type: string
                engine:
                  type: string
                platform:
                  type: string
                os:
                  type: string
                current_page:
                  type: string
                url:
                  type: string
                user-agent-string:
                  type: string
      responses:
        '200':
          description: Returns empty object
          content:
            application/json:
              schema:
                type: object
        '302':
          description: Redirected due to wrong endpoint
        '403':
          description: Captcha not verified
        '404':
          description: Error (see message)
  /resources:
    get:
      summary: Show API resources
      description: Show all resources adsws knows.
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: All API resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  adsws.XXX:
                    type: object
                    properties:
                      endpoints:
                        type: array
                        items:
                          type: string
                      base:
                        type: string
  /oauth/authorize:
    get:
      summary: Render authorization request
      description: Render authorization request; returns an HTML page.
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      parameters:
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        - name: request
          in: query
          required: true
          schema:
            type: string
        - name: scopes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns authorization page
        '404':
          description: No client provided
    post:
      summary: Confirm authorization request
      description: Confirm authorization request
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Return true if authorized
  /oauth/token:
    get:
      summary: Exchange/refresh access tokens
      description: >
        Exchange/refresh access tokens; implements OAuth2 token_handler
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: Token exchange successful
    post:
      summary: Exchange/refresh access tokens
      description: >
        Exchange/refresh access tokens; implements OAuth2 token_handler
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: Token exchange successful
  /oauth/errors:
    get:
      summary: Error view for invalid oauth request
      description: >
        Error view for invalid oauth request; returns an HTML page
      tags:
        - adsws
        - internal
      responses:
        '200':
          description: Returns rendered error page
  /oauth/ping:
    get:
      summary: Verify authentication
      description: Verify authentication
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Response only if authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  ping:
                    description: "pong"
                    type: string
    post:
      summary: Verify authentication
      description: Verify authentication
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Response only if authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  ping:
                    description: "pong"
                    type: string
  /oauth/info:
    get:
      summary: Verify authentication with test scope
      description: Verify authentication with test scope
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Response only if authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                  client:
                    type: string
                  scopes:
                    type: array
                    items:
                      type: string
        '404':
          description: Returned if not testing or in debug mode
  /oauth/invalid:
    get:
      summary: (testing only) Verify authentication
      description: >
        (testing only) Verify authentication with "invalid scope"; successful
        response unreachable
      tags:
        - adsws
        - internal
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: >
            Response if authenticated with "invalid" scope; unreachable
          content:
            application/json:
              schema:
                type: object
                properties:
                  ding:
                    description: "dong"
                    type: string
        '404':
          description: Returned if not testing or in debug mode
  /biblib/twopointoh:
    get:
      summary: (retired) Import libraries from ADS 2.0
      description: >
        (retired) Import libraries from ADS 2.0 for the current user
      tags:
        - libraries
        - deprecated
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Success (returns/upserts user's libraries)
        '400':
          description: User details not specified
  /biblib/classic:
    get:
      summary: (deprecated) Import libraries from ADS Classic
      description: >
        (deprecated) Import libraries from ADS Classic for the current user
      tags:
        - libraries
        - deprecated
      security:
      - ApiKeySecurity: []
      responses:
        '200':
          description: Returns/upserts user's libraries
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    action:
                      type: string
                    description:
                      type: string
                    library_id:
                      type: string
                    name:
                      type: string
                    num_added:
                      type: integer
        '400':
          description: User details not specified
  /graphics/{bibcode}:
    get:
      summary: Return graphics for a bibcode
      description: Return graphics information for a bibcode
      tags:
        - graphics
        - internal
      security:
      - ApiKeySecurity: []
      parameters:
        - name: bibcode
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Graphics info for the bibcode
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    bibcode:
                      type: string
                    number:
                      type: integer
                    pick:
                      type: string
                    header:
                      type: string
                    figures:
                      type: array
                      items:
                        type: object
                        properties:
                          figure_label:
                            type: string
                          figure_caption:
                            type: string
                          figure_type:
                            type: string
                          images:
                            type: array
                            items:
                              type: object
                              properties:
                                thumbnail:
                                  type: string
                                highres:
                                  type: string
  /harbour/auth/twopointoh:
    post:
      summary: (retired) Authenticate user in ADS 2.0
      description: >
        (retired) Audenticate user's ADS 2.0 credentials with the
        external ADS Classic endpoint
      tags:
        - classic import
        - deprecated
      security:
      - ApiKeySecurity: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                twopointoh_email:
                  type: string
                twopointoh_password:
                  type: string
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                type: object
                properties:
                  twopointoh_authed:
                    type: boolean
                  twopointoh_email:
                    type: string
        '400':
          description: Malformed request
        '404':
          description: Unknown user; incorrect password; failed authentication
        '500':
          description: Unknown error
        '504':
          description: Timeout
  /harbour/export/twopointoh/{export}:
    get:
      summary: (retired) Export ADS 2.0 libraries
      description: >
        (retired) Return ADS 2.0 libraries in a format users can use to
        import them to other services. The following third-party services
        are supported: Zotero, Papers, Mendeley.
      tags:
        - classic import
        - deprecated
      security:
      - ApiKeySecurity: []
      parameters:
        - name: export
          description: Service to export to
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: URL to file import
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
        '400':
          description: Missing user account; user has no libraries
        '500':
          description: Unknown error
  /harbour/libraries/twopointoh/{user_id}:
    get:
      summary: (retired) Fetch ADS 2.0 libraries
      description: >
        (retired) Collect user's ADS 2.0 libraries and return as a JSON.
      tags:
        - classic import
        - deprecated
      security:
      - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: JSON of user's ADS 2.0 libraries
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    documents:
                      type: array
                      items:
                        type: string
        '400':
          description: Missing user account; user has no libraries
        '500':
          description: Unknown error
  /harbour/libraries/classic/{user_id}:
    get:
      summary: (deprecated) Fetch ADS Classic libraries
      description: >
        (deprecated) Collect user's ADS Classic libraries and return
        them as a JSON.
      tags:
        - classic import
        - deprecated
      security:
      - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: JSON of user's Classic libraries
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    documents:
                      type: array
                      items:
                        type: string
        '400':
          description: Missing user account
        '500':
          description: Unknown error
        '504':
          description: Classic timeout
  /harbour/myads/classic/{user_id}:
    get:
      summary: Fetch ADS Classic myADS setup
      description: >
        Collect user's ADS Classic myADS setups for use by the importing
        endpoint.
      tags:
        - classic import
        - internal
      security:
      - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: User's Classic myADS setups
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: User ID
                      type: integer
                    email:
                      description: User email
                      type: string
                    firstname:
                      description: User first name
                      type: string
                    lastname:
                      description: User last name
                      type: string
                    daily_t1:
                      description: keywords 1 (daily arXiv)
                      type: string
                    groups:
                      description: arXiv classes (daily)
                      type: array
                      items:
                        type: string
                    phy_t1:
                      description: keywords 1 (physics)
                      type: string
                    phy_t2:
                      description: keywords 2 (physics)
                      type: string
                    phy_aut:
                      description: authors (physics)
                      type: string
                    pre_t1:
                      description: keywords 1 (weekly arXiv)
                      type: string
                    pre_t2:
                      description: keywords 2 (weekly arXiv)
                      type: string
                    pre_aut:
                      description: authors (weekly arXiv)
                      type: string
                    ast_t1:
                      description: keywords 1 (astronomy)
                      type: string
                    ast_t2:
                      description: keywords 2 (astronomy)
                      type: string
                    ast_aut:
                      description: authors (astronomy)
                      type: string
                    disabled:
                      description: Categories for which emails are disabled
                      type: array
                      items:
                        type: string
        '400':
          description: Missing user account
        '500':
          description: Unknown error
        '504':
          description: Classic timeout
  /orcid/exchangeOAuthCode:
    get:
      summary: OAuth exchange with ORCID
      description: OAuth token exchange with external ORCID Api
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - name: code
          description: Code to exchange
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Exchange complete, login successful
        '502':
          description: Connection error with ORCID API
  /orcid/{orcidId}/orcid-profile:
    get:
      summary: (retired) Get user profile from ORCID API
      description: >
        (retired) Get user profile from ORCID API and save to local storage.
      tags:
        - orcid
        - deprecated
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '200':
          description: JSON profile from ORCID API
    post:
      summary: (retired) Set user profile in ORCID API
      description: >
        (retired) Set user profile in ORCID API and save to local storage.
      tags:
        - orcid
        - deprecated
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '200':
          description: JSON profile from ORCID API
  /orcid/{orcidId}/orcid-profile/{type}:
    get:
      summary: Get user profile from ORCID API
      description: >
        Get user profile from ORCID API. Update in local storage if requested.
        Return either an abridged or full version of the profile, depending
        on requested type.
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - name: type
          description: >
            'Simple' to return bibcodes and statuses only; 'full' to return
            full profile
          required: true
          in: path
          schema:
            type: string
            enum:
              - simple
              - full
        - name: update
          description: Set to True to update local storage
          required: false
          in: query
          schema:
            type: boolean
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '200':
          description: >
            If type=simple, an object is still returned but containing
            only the bibcodes + statuses. The full response is returned
            if type=full.
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                  pubmonth:
                    type: string
                  pubyear:
                    type: string
                  putcode:
                    type: integer
                  source:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                  title:
                    type: string
                  updated:
                    type: string
        '404':
          description: Wrong type passed, no profile found for ORCID ID
        '502':
          description: Connection error with ORCID API
  /orcid/{orcidId}/orcid-works/{putcode}:
    get:
      summary: Get one or more works from the ORCID API
      description: >
        Get the details of one or more works from the user's profile
        on the ORCID API
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/putcode'
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '200':
          description: Returns work details from the ORCID API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orcid-work-from'
    put:
      summary: Edit a work on the ORCID API
      description: >
        Edit the details of a work on the user's profile on the ORCID API
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/putcode'
        - $ref: '#/components/parameters/OrcidAuthorization'
      requestBody:
        description: >
          Use the return value from the GET method of this endpoint, modifying
          fields as needed before sending as a body on this PUT method.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orcid-work-to'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orcid-work-from'
        '409':
          description: External ID conflict
    delete:
      summary: Delete a work from the ORCID API
      description: >
        Delete a work from the user's profile on the ORCID API
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/putcode'
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '204':
          description: Work successfully deleted
  /orcid/{orcidId}/orcid-work:
    post:
      summary: Add a work to the user's ORCID profile
      description: >
        Add a single work to the user's ORCID profile using the ORCID API
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orcid-work-to'
      responses:
        '200':
          description: ORCID work metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orcid-work-from'
  /orcid/{orcidId}/orcid-works:
    post:
      summary: Bulk add multiple works to the user's ORCID profile
      description: Bulk add one or more works to the user's ORCID profile
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/orcid-work-to'
      responses:
        '200':
          description: ORCID work metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orcid-work-from'
  /orcid/export/{iso_datestring}:
    get:
      summary: (pipeline) Get all ORCID users updated after a certain point
      description: >
        Get all internal ORCID users whose profiles have been updated after a
        certain date/time. For ORCID pipeline use.
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/iso_datestring'
      responses:
        '200':
          description: Recently updated ORCID users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    orcid_id:
                      type: string
                    created:
                      type: string
                    updated:
                      type: string
                    profile:
                      type: string
  /orcid/get-profile/{orcidId}:
    get:
      summary: (pipeline) Fetch the latest profile from the ORCID API
      description: >
        For a given user, fetch the latest profile from the ORCID API. For
        ORCID pipeline use.
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
      responses:
        '200':
          description: ORCID user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  orcid_id:
                    type: string
                  access_token:
                    type: string
                  created:
                    type: string
                  updated:
                    type: string
                  profile:
                    description: Fresh profile from ORCID API, serialized JSON
                    type: string
                  info:
                    type: string
  /orcid/update-orcid-profile/{orcidId}:
    get:
      summary: (pipeline) Updates stored local profile using ORCID API
      description: >
        Calls the ORCID API to fetch and store a fresh copy of the ORCID
        profile in local storage. For ORCID pipeline use.
      tags:
        - orcid
        - pipeline
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
      responses:
        '200':
          description: Returns claimed bibcodes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Missing record or access token for user
        '502':
          description: Connection error with ORCID API
  /orcid/preferences/{orcidId}:
    get:
      summary: Get ORCID preferences
      description: Get ORCID preferences
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '200':
          description: ORCID preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orcid-preferences'
        '400':
          description: Unauthorized or other error
        '404':
          description: User not found
    post:
      summary: Set ORCID preferences
      description: Set ORCID preferences
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orcid-preferences'
      responses:
        '200':
          description: ORCID preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orcid-preferences'
        '400':
          description: Unauthorized or other error
        '404':
          description: User not found
        '500':
          description: Database error
  /orcid/update-status/{orcidId}:
    get:
      summary: (pipeline) Get bibcode status for a given user
      description: Get bibcode status for a given user. For ORCID pipeline use.
      tags:
        - orcid
        - pipeline
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
      responses:
        '200':
          description: Bibcodes and statuses
          content:
            application/json:
              schema:
                type: object
                properties:
                  bibcodes:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
    post:
      summary: (pipeline) Set bibcode status for a given user
      description: Set bibcode status for a given user. For ORCID pipeline use.
      tags:
        - orcid
        - pipeline
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bibcodes:
                  type: array
                  items:
                    type: string
                status:
                  type: string
      responses:
        '200':
          description: Bibcodes and statuses
          content:
            application/json:
              schema:
                type: object
                properties:
                  bibcode:
                    type: string
        '500':
          description: Updated status not saved
  /orcid/orcid-name/{orcidId}:
    get:
      summary: Get name from ORCID profile
      description: Get user's name from their ORCID profile
      tags:
        - orcid
        - internal
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/orcidId'
        - $ref: '#/components/parameters/OrcidAuthorization'
      responses:
        '200':
          description: >
            Returns personal details section of ORCID profile; name can
            be parsed.
        '502':
          description: Connection error with ORCID API
  /objects/nedsrv:
    post:
      summary: Returns object NED refcodes for a given object list
      description: Returns object NED refcodes for a given object list
      tags:
        - objects
        - internal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    type: string
                output_format:
                  type: string
      responses:
        '200':
          description: NED refcodes
          content:
            text/plain:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
                  ambiguous:
                    type: array
                    items:
                      type: string
        '400':
          description: Error with NED API
        '504':
          description: Connection error with NED API
  /reference/pickle_source_matcher:
    put:
      summary: Create new source matcher file
      description: >
        Endpoint to be called internally whenever the files of source
        matcher have been updated, to create a new source matcher file.
      tags:
        - reference
        - internal
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          description: New source matcher file created successfully
        '400':
          description: Error creating new source matcher file
  /reference/pickle_crf:
    put:
      summary: Create new crf text model file
      description: >
        Endpoint to be called internally whwnever the models (either text
        or xml) have been changed, to create a new crf text model file.
      tags:
        - reference
        - internal
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          description: New crf text matcher file created successfully
  /resolver/update:
    put:
      summary: (pipeline) Add/update records in resolver database
      description: >
        Add/update records in resolver database. Used by master pipeline.
      tags:
        - resolver
        - pipeline
      security:
        - ApiKeySecurity: []
      requestBody:
        description: Protobuf objects
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successfully populated database
        '400':
          description: >
            Too many records sent; unable to extract protobufs;
            error updating database
  /resolver/delete:
    delete:
      summary: (pipeline) Delete records from resolver database
      description: >
        Delete records from the resolver database. Used by master pipeline.

        **Note**: This endpoint requires a request body, or payload,
        consisting of an array of the bibcodes to be deleted. However,
        OpenAPI v3.0.3 does not allow endpoints with the DELETE method to have
        request bodies defined; this is resolved in OpenAPI v.3.1+, which is
        not yet available.
      tags:
        - resolver
        - pipeline
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          description: Successfully deleted records
        '400':
          description: >
            Error with payload; too many bibcodes sent; error updating database
  /vault/configuration:
    get:
      summary: Fetch data from VAULT_BUMBLEBEE_OPTIONS
      description: >
        Fetch data from VAULT_BUMBLEBEE_OPTIONS, default key.
      tags:
        - vault
        - internal
      responses:
        '200':
          description: Vault configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  defalt_key:
                    description: >
                      Default vault Bumblebee options key, as defined in config
                    type: string
        '404':
          description: No default key setup in config
        '500':
          description: Default key misconfigured
  /vault/configuration/{key}:
    get:
      summary: Fetch data from VAULT_BUMBLEBEE_OPTIONS
      description: >
        Fetch data from VAULT_BUMBLEBEE_OPTIONS from the key specified
      tags:
        - vault
        - internal
      parameters:
        - name: key
          description: Key to return from vault configuration
          required: true
          in: path
          schema:
            default: link_servers
            type: string
      responses:
        '200':
          description: Library link servers or other vault config info
        '404':
          description: Unknown key
        '500':
          description: Server misconfiguration
  /vault/user-data:
    get:
      summary: Retrieve user preferences
      description: >
        Retrieve preferences for the current user.
      tags:
        - vault
        - internal
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          description: User preferences
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Error with authentication
    post:
      summary: Store user preferences
      description: >
        Store preferences for the current user.
      tags:
        - vault
        - internal
      security:
        - ApiKeySecurity: []
      requestBody:
        description: JSON containing only keys/values to update/add.
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Update successful, all user settings returned
        '400':
          description: >
            Error with authentication; payload error; too many keys stored;
            too much data stored
        '500':
          description: Database error
  /vault/get-myads/{user_id}:
    get:
      summary: (pipeline) Fetch myADS profile for a given user
      description: >
        Fetch a myADS profile, with the notification setups, for a given
        user. Used by the myADS pipeline.
      tags:
        - notifications
        - pipeline
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: >
            Metadata and constructed queries for all active notification
            setups for the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myADSsetupResponse'
        '404':
          description: No notifications found for the given user.
  /vault/get-myads/{user_id}/{iso_datestring}:
    get:
      summary: (pipeline) Fetch myADS profile for a given user
      description: >
        Fetch a myADS profile, with the notification setups, for a given
        user, using the provided query start date. Used by the myADS pipeline.
      tags:
        - notifications
        - pipeline
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/iso_datestring'
      responses:
        '200':
          description: >
            Metadata and constructed queries for all active notification
            setups for the user. The start date of the queries will be that
            provided as a parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myADSsetupResponse'
        '404':
          description: No notifications found for the given user.
  /vault/myads-users/{iso_datestring}:
    get:
      summary: (pipeline) Fetch users updated after the given date/time
      description: >
        Fetch all myADS users who have updated their profiles after a given
        date/time. Used by the myADS pipeline.
      tags:
        - notifications
        - pipeline
      security:
        - ApiKeySecurity: []
      parameters:
        - $ref: '#/components/parameters/iso_datestring'
      responses:
        '200':
          description: Recently updated myADS users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: string
  /vault/myads-import:
    get:
      summary: Import myADS settings from Classic
      description: >
        Import myADS settings from Classic for the current user. Fetches
        setups from Classic and performs an upsert with the current
        myADS settings.
      tags:
        - notifications
        - internal
      security:
        - ApiKeySecurity: []
      responses:
        '200':
          description: myADS metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  existing:
                    description: Metadata of existing myADS setups.
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        frequency:
                          type: string
                        name:
                          type: string
                        template:
                          type: string
                  new:
                    description: Metadata of imported myADS setup.
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        frequency:
                          type: string
                        name:
                          type: string
                        template:
                          type: string
        '400':
          description: Unauthorized
